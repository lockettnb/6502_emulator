//
// 2018/01/19 
//

#include <dirent.h> 
#include <stdio.h> 
#include <stdlib.h>
#include <dirent.h> 
#include <string.h> 
#include "linenoise.h"


void completion(const char *buf, linenoiseCompletions *lc)
{
 static int   first_run = 1;
 static char *filelist[255];

 struct dirent *dir;
 char *fname;
 int i;  
 int fnum=0;
 DIR *d;

    if(first_run) {
        first_run = 0;
        printf("first run\n");
        d = opendir(".");
        if (d) {
            while ((dir = readdir(d)) != NULL){
                if(dir->d_name[0] != '.') {
                    fname = (char *) malloc(strlen(dir->d_name)+1);
                    strcpy(fname, dir->d_name);
                    filelist[fnum++] = fname;
                }
            }
            closedir(d);
        }

      }

//     if (buf[0] == 'h'){
//         linenoiseAddCompletion(lc,"hello");
//         linenoiseAddCompletion(lc,"hello there");
//     }



}

char *hints(const char *buf, int *color, int *bold) {
    if (!strcasecmp(buf,"hello")) {
        *color = 35;
        *bold = 0;
        return " World";
    }
    return NULL;
}

int main(int argc, char **argv) 
{
 char *line;
 char *prgname = argv[0];


    linenoiseSetCompletionCallback(completion);
    linenoiseSetHintsCallback(hints);

    while((line = linenoise("hello> ")) != NULL) {
        /* Do something with the string. */
        if (line[0] != '\0' && line[0] != '/') {
            printf("echo: '%s'\n", line);
            linenoiseHistoryAdd(line); /* Add to the history. */
            linenoiseHistorySave("history.txt"); /* Save the history on disk. */
        } else if (!strncmp(line,"/historylen",11)) {
            /* The "/historylen" command will change the history len. */
            int len = atoi(line+11);
            linenoiseHistorySetMaxLen(len);
        } else if (line[0] == '/') {
            printf("Unreconized command: %s\n", line);
            exit(0);
        }
        free(line);
    }

  return(0);
}
